# CI build for release packages.

variables:
  UnityVersion: Unity2018.3.7f1
  MRTKVersion: 2.0.0  # Major.Minor.Patch
  MRTKReleaseTag: ''  # final version component, e.g. 'RC2.1' or empty string

jobs:
- job: CIReleaseValidation
  timeoutInMinutes: 90
  pool:
    name: Analog On-Prem
    demands:
    - Unity2018.3.7f1  # variable expansion not allowed here
    - COG-UnityCache-WUS2-01
    - SDK_18362 -equals TRUE
  steps:
  - template: templates/common.yml
  - task: PublishBuildArtifacts@1
    inputs:
      PathtoPublish: '$(Build.SourcesDirectory)\NuGet'
      ArtifactName: 'NuGet'
  - template: templates/releasesigning.yml
  - template: templates/end.yml

- job: ReleaseSigning
  dependsOn: CIReleaseValidation
  pool:
    name: Package ES Lab E
  steps:
  - task: DownloadBuildArtifacts@0
    inputs:
      buildType: 'current'
      downloadType: 'single'
      artifactName: 'NuGet'
      downloadPath: '$(Build.SourcesDirectory)'
    
  # sign all DLLs
  - template: templates/tasks/signing.yml
    parameters:
      ConfigName: "MRTKSignConfig.xml"

  # Create pre-release packages
  - ${{ if eq(variables['MRTKReleaseTag'], '') }}:
    - template: templates/package.yml
      parameters:
        version: '$(MRTKVersion)-$(Build.BuildNumber).prerelease'
        packDestination: '$(Build.SourcesDirectory)\artifacts\prerelease'
  - ${{ if ne(variables['MRTKReleaseTag'], '') }}:
    - template: templates/package.yml
      parameters:
        version: '$(MRTKVersion)-$(Build.BuildNumber).prerelease.$(MRTKReleaseTag)'
        packDestination: '$(Build.SourcesDirectory)\artifacts\prerelease'

  # Create release packages
  - ${{ if eq(variables['MRTKReleaseTag'], '') }}:
    - template: templates/package.yml
      parameters:
        version: '$(MRTKVersion)'
        packDestination: '$(Build.SourcesDirectory)\artifacts\release'
  - ${{ if ne(variables['MRTKReleaseTag'], '') }}:
    - template: templates/package.yml
      parameters:
        version: '$(MRTKVersion)-$(MRTKReleaseTag)'
        packDestination: '$(Build.SourcesDirectory)\artifacts\release'        

  - template: templates/tasks/signing.yml
    parameters:
      ConfigName: "MRTKNuGetSignConfig.xml"

  - task: PublishBuildArtifacts@1
    displayName: 'Publish Packages'
    inputs:
      PathtoPublish: '$(Build.SourcesDirectory)\artifacts'
      ArtifactName: 'mrtk-unity-packages'

  - task: 333b11bd-d341-40d9-afcf-b32d5ce6f23b@2  # NuGetCommand
    displayName: 'NuGet push'
    inputs:
      command: push
      packagesToPush: '$(Build.SourcesDirectory)/artifacts/prerelease/**/*.nupkg;!$(Build.SourcesDirectory)/artifacts/prerelease/**/*.symbols.nupkg'
      publishVstsFeed: '$(NuGetFeedId)'
      buildProperties: 'version=$(MRTKVersion)-$(Build.BuildNumber)'
